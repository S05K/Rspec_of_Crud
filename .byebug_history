c
@book.update(all_params)
n
@book = Book.find_by(id: params[:id])
c
put "/books/#{book.id}", params: { price: nil}
n
 book = Book.create(price:89658, name:"Avatar")
c
n
@book.update(all_params)
n
@book = Book.find_by(id: params[:id])
c
n
@book.update(only_params)
n
@book = Book.find_by(id: params[:id])
n
 put "/books/#{book.id}", params: { price: 250}
n
 book = Book.create(price:89658, name:"Avatar")
c
put "/books/#{book.id}", params: { price: 250}
n
book = Book.create(price:89658, name:"Avatar")
c
n
@book.update(only_params)
n
@book = Book.find_by(id: params[:id])
n
put "/books/#{book.id}", params: { price: 250}
n
book = Book.create(price:89658, name:"Avatar")
c
@book.update(only_params)
n
@book = Book.find_by(id: params[:id])
n
put "/books/#{book.id}", params: { price: 250}
n
 book = Book.create(price:89658)
c
book = Book.create(price:89658)
 book = Book.create(price:89658)
c
@book = Book.find_by(id: params[:id])
c
@book.update(only_params)
n
@book = Book.find_by(id: params[:id])
n
put "/books/#{book.id}", params: { price: 250}
n
book = Book.create(price:89658)
c
n
@book.update(only_params)
n
 @book = Book.find_by(id: params[:id])
c
@book = Book.find_by(id: params[:id])
n
put "/books/#{book.id}", params: { name: 250}
n
 book = Book.create(price:89658)
c
@book.update(only_params)
n
 @book = Book.find_by(id: params[:id])
c
 @book.update(all_params)
n
 @book = Book.find_by(id: params[:id])
n
put "/books/#{book.id}", params: { name: nil}
n
 book = Book.create(name: "Avatar", price:89658)
c
@book.update(all_params)
n
 @book = Book.find_by(id: params[:id])
c
@book = Book.find_by(id: params[:id])
n
 put "/books/#{book.id}", params: { name: 8582}
n
book = Book.create(name: "Avatar", price:89658)
c
@book
n
@book.update(all_params)
if @book.update(all_params)
n
 @book = Book.find_by(id: params[:id])
c
@book = Book.find_by(id: params[:id])
 expect(book.name).to eq("Avatar")
book.name
n
 book.reload
n
put "/books/#{book.id}", params: { name: "Avatar Part-2"}
n
 book = Book.create(name: "Avatar")
 expect(book.name).to eq("Avatar")
n
 book.reload
n
put "/books/#{book.id}", params: { name: "Avatar Part-2"}
n
 book = Book.create(name: "Avatar", price:89658)
c
book.reload
n
 put "/update", params: { name: "Avatar Part-2"}
n
 book = Book.create(name: "Avatar", price:89658)
c
n
c
 expect(book.price).to eq(2025)
 expect(book.name).to eq("New Name") 
n
expect(response).to have_http_status(200)
n
expect(response).to have_http_status(200)
book.reload
n
put "/books/#{book.id}", params: {   name: 'New Name', price: 101  }
n
book = Book.create(name: "teste_book", price: 101)
c
expect(book.name).to eq("New Name")
n
 expect(response).to have_http_status(200)
n
book.reload
n
put "/books/#{book.id}", params: {  book: { name: 'New Name', price: 2025 } }
n
 book = Book.create(name: "teste_book", price: 101)
c
expect(book.name).to be == "New Name" 
n
  book.reload
n
 expect(response).to have_http_status(200)
n
 put "/books/#{book.id}", params: { id: book.id, book: { name: 'New Name', price: 2025 } }
n
4n
book = Book.create(name: "teste_book", price: 101)
c
@book = Book.find_by(id: params[:id])
c
 put "/update", params: { id: book.id, name: "New Name", price: "New Price" }
expect(response).to have_http_status(404)
n
book = Book.create(name: "Avatar", price:"101")
c
 book = Book.create(name: nil, price:"101")
c
 book = Book.create(name: 74, price:"101")
c
n
c
all_params
c
n
